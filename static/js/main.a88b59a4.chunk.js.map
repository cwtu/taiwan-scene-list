{"version":3,"sources":["Scene.js","setups.js","App.js","index.js"],"names":["Scene","memo","Name","Description","DescriptionDetail","Picture","console","log","className","cities","getUrl","city","skip","url","reducer","state","action","type","isError","isLoading","scenes","payload","concat","Error","Navbar","setRequest","id","onClick","prevRequest","document","getElementById","value","defaultValue","disabled","map","initialState","Scenelist","request","useReducer","dispatch","useEffect","skipCount","fetchScenes","a","fetch","response","json","newScenes","length","window","removeEventListener","scrollHandler","Math","round","innerHeight","scrollY","body","offsetHeight","addEventListener","scene","ID","App","useState","ReactDOM","render"],"mappings":"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","file":"static/js/main.a88b59a4.chunk.js","sourcesContent":["import { memo } from \"react\";\n\nconst Scene = memo(({ Name, Description, DescriptionDetail, Picture }) => {\n  console.log(\"load scene\");\n  if (!Description) Description = DescriptionDetail;\n\n  return (\n    <li className=\"scene\">\n      <h2>{Name}</h2>\n      <hr />\n      <p className=\"description\">{Description}</p>\n    </li>\n  );\n});\n\nexport default Scene;\n","export const loadSceneNum = 30; // max = 5185\n\nexport const cities = [\n  [\"臺北市\", \"Taipei\"],\n  [\"新北市\", \"NewTaipei\"],\n  [\"桃園市\", \"Taoyuan\"],\n  [\"臺中市\", \"Taichung\"],\n  [\"臺南市\", \"Tainan\"],\n  [\"高雄市\", \"Kaohsiung\"],\n  [\"基隆市\", \"Keelung\"],\n  [\"新竹市\", \"Hsinchu\"],\n  [\"新竹縣\", \"HsinchuCounty\"],\n  [\"苗栗縣\", \"MiaoliCounty\"],\n  [\"彰化縣\", \"ChanghuaCounty\"],\n  [\"南投縣\", \"NantouCounty\"],\n  [\"雲林縣\", \"YunlinCounty\"],\n  [\"嘉義縣\", \"ChiayiCounty\"],\n  [\"嘉義市\", \"Chiayi\"],\n  [\"屏東縣\", \"PingtungCounty\"],\n  [\"宜蘭縣\", \"YilanCounty\"],\n  [\"花蓮縣\", \"HualienCounty\"],\n  [\"臺東縣\", \"TaitungCounty\"],\n  [\"金門縣\", \"KinmenCounty\"],\n  [\"澎湖縣\", \"PenghuCounty\"],\n  [\"連江縣\", \"LienchiangCounty\"],\n];\n\nexport function getUrl(city = null, skip = 0) {\n  var url = \"https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot\";\n\n  url =\n    url +\n    (city ? \"/\" + city + \"?\" : \"?\") +\n    \"$top=\" +\n    loadSceneNum +\n    \"&$skip=\" +\n    skip +\n    \"&$format=JSON\";\n\n  return url;\n}\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"PREP_FETCH\": {\n      return { ...state, isError: false, isLoading: true };\n    }\n    case \"INI_FETCH\": {\n      return {\n        ...state,\n        scenes: action.payload,\n        isLoading: false,\n      };\n    }\n    case \"CON_FETCH\": {\n      return {\n        ...state,\n        scenes: state.scenes.concat(action.payload),\n        isLoading: false,\n      };\n    }\n    case \"ERR_FETCH\": {\n      return { ...state, isError: true };\n    }\n    default: {\n      throw new Error(\"Unhandled action type\");\n    }\n  }\n};\n","import { useState, useEffect, useReducer } from \"react\";\nimport Scene from \"./Scene.js\";\nimport { loadSceneNum, cities, getUrl, reducer } from \"./setups.js\";\n\nconst App = () => {\n  const [request, setRequest] = useState(\"\");\n\n  return (\n    <>\n      <Navbar setRequest={setRequest} />\n      <Scenelist request={request} />\n    </>\n  );\n};\n\nconst Navbar = ({ setRequest }) => {\n  console.log(\"Navbar\");\n  return (\n    <div id=\"navbar\">\n      <h1 id=\"title\">臺灣景點瀏覽</h1>\n      <section id=\"form\">\n        <button\n          onClick={() => {\n            setRequest((prevRequest) => \"\");\n            document.getElementById(\"cities\").value = \"選擇城市\";\n          }}\n        >\n          全部\n        </button>\n        <select id=\"cities\" defaultValue=\"選擇城市\">\n          <option key=\"default\" disabled>\n            選擇城市\n          </option>\n          {cities.map((city) => (\n            <option\n              key={city[1]}\n              value={city[1]}\n              onClick={() => setRequest((prevRequest) => city[1])}\n            >\n              {city[0]}\n            </option>\n          ))}\n        </select>\n      </section>\n    </div>\n  );\n};\n\nconst initialState = {\n  scenes: [],\n  isLoading: false,\n  isError: false,\n};\n\nconst Scenelist = ({ request }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  console.log(\"Scenelist\");\n  // console.log(scenes);\n\n  useEffect(() => {\n    var skipCount = 0;\n    const fetchScenes = async (request) => {\n      dispatch({ type: \"PREP_FETCH\" });\n\n      try {\n        const response = await fetch(getUrl(request, skipCount));\n        const newScenes = await response.json();\n\n        skipCount\n          ? dispatch({ type: \"CON_FETCH\", payload: newScenes })\n          : dispatch({ type: \"INI_FETCH\", payload: newScenes });\n\n        if (newScenes.length < loadSceneNum)\n          window.removeEventListener(\"scroll\", scrollHandler);\n\n        skipCount += loadSceneNum;\n      } catch (e) {\n        dispatch({ type: \"ERR_FETCH\" });\n      }\n    };\n\n    const scrollHandler = () => {\n      if (\n        Math.round(window.innerHeight + window.scrollY) >=\n        document.body.offsetHeight\n      ) {\n        fetchScenes(request);\n      }\n    };\n\n    fetchScenes(request);\n    window.addEventListener(\"scroll\", scrollHandler);\n    return () => {\n      console.log(\"cleanup\");\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  }, [request]);\n\n  return (\n    <>\n      <ul className=\"scenelist\">\n        {state.scenes.map((scene) => (\n          <Scene key={scene.ID} {...scene} />\n        ))}\n        {state.isLoading ? <div id=\"loading\">Loading...</div> : <div></div>}\n      </ul>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}